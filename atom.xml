<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tony超的博客</title>
  
  <subtitle>你想拥有什么，你就去追求什么!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sunjianchao.top/"/>
  <updated>2018-04-01T02:48:35.000Z</updated>
  <id>http://sunjianchao.top/</id>
  
  <author>
    <name>孙建超</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&lt;font size=&quot;5&quot;&gt;git 命令行常用命令&lt;/font&gt;</title>
    <link href="http://sunjianchao.top/2018/03/31/git/git/"/>
    <id>http://sunjianchao.top/2018/03/31/git/git/</id>
    <published>2018-03-31T12:32:53.000Z</published>
    <updated>2018-04-01T02:48:35.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。公司目前的代码管理用的是git,自己简单总结了下git常用的命令。</p></blockquote><h3 id="命令行总结"><a href="#命令行总结" class="headerlink" title="命令行总结"></a>命令行总结</h3><p>高手都是直接用命令行，用命令行显得逼格更高。</p><h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><p>第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：</p><pre><code>git config --global user.name &quot;xxxx&quot; #用户名git config --global user.email &quot;xxxx@xxx.com&quot; #邮箱</code></pre><h4 id="检出仓库"><a href="#检出仓库" class="headerlink" title="检出仓库"></a>检出仓库</h4><pre><code>git clone git://github.com/jquery/git_learn.git</code></pre><h4 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h4><p>查看本地所有分支</p><pre><code>git branch</code></pre><p>查看远程所有分支</p><pre><code>git branch -r</code></pre><p>列出所有本地分支和远程分支</p><pre><code>git branch -a</code></pre><h4 id="创建本地-dev-分支"><a href="#创建本地-dev-分支" class="headerlink" title="创建本地 dev 分支"></a>创建本地 dev 分支</h4><pre><code>git checkout -b dev</code></pre><p>创建新分支dev并立即切换到新分支，相当于以下两条命令：</p><pre><code>git branch devgit checkout devgit checkout -b local-branchname origin/remote_branchname  </code></pre><p>  就可以将远程分支映射到本地命名为local-branchname 的一分支,如：<br>想从远程分支 dev （远程有该分支）创建本地分支 dev1：</p><pre><code>git checkout -b dev1 origin/dev</code></pre><h4 id="开发提交"><a href="#开发提交" class="headerlink" title="开发提交"></a>开发提交</h4><p>add 文件</p><pre><code>git add README.md</code></pre><p>添加所有修改的文件</p><pre><code>git add .</code></pre><p>commit 本地提交</p><pre><code>git commit -m &quot;修改的内容&quot;</code></pre><p>将文件给推到服务器上</p><pre><code>git push -u origin master  </code></pre><h4 id="合并到本地-master-分支"><a href="#合并到本地-master-分支" class="headerlink" title="合并到本地 master 分支"></a>合并到本地 master 分支</h4><p>合并到本地 master 分支<br>分支 dev 开发工作完成，我们就可以切换回本地 master 分支</p><pre><code>git checkout master</code></pre><p>进行本地分支 dev 合并</p><pre><code>git merge dev</code></pre><h4 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h4><pre><code>git branch -d dev</code></pre><p>-d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</p><pre><code>git branch -D dev</code></pre><h4 id="创建远程分支-dev"><a href="#创建远程分支-dev" class="headerlink" title="创建远程分支 dev"></a>创建远程分支 dev</h4><p>直接提交</p><pre><code>git push origin master:dev</code></pre><p>这里冒号可以提交到指定分支，上面命令，把提交本地 master 分支到远程的 dev 分支，远程没有dev这个分支，会创建。</p><pre><code>git push origin master</code></pre><p>这是本地 master 提交到远程主分支 master，相当于：</p><pre><code>git push origin master:master</code></pre><h4 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h4><pre><code>git push origin --delete dev</code></pre><p>或者</p><pre><code>git push origin :dev</code></pre><p>远程分支 dev 将被删除。</p><h4 id="删除一个文件"><a href="#删除一个文件" class="headerlink" title="删除一个文件"></a>删除一个文件</h4><pre><code>git rm [file name] </code></pre><h4 id="回到具体的版本"><a href="#回到具体的版本" class="headerlink" title="回到具体的版本"></a>回到具体的版本</h4><pre><code>git reflog 查看命令历史，以便回到具体的版本git reset --hard HEAD^ </code></pre><h4 id="git-pull-和-git-fetch-的区别"><a href="#git-pull-和-git-fetch-的区别" class="headerlink" title="git pull 和 git fetch 的区别"></a>git pull 和 git fetch 的区别</h4><pre><code>git pull 本地与服务器端同步git fetch 相当于是从远程获取最新版本到本地，不会自动merge如：git fetch origin master(更新分支，未何并)git merge master</code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><h4 id="常用-Git-命令清单"><a href="#常用-Git-命令清单" class="headerlink" title="常用 Git 命令清单"></a><a href="http://http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">常用 Git 命令清单</a></h4><h4 id="Git分支管理策略"><a href="#Git分支管理策略" class="headerlink" title="Git分支管理策略"></a><a href="http://http://www.ruanyifeng.com/blog/2012/07/git.html" target="_blank" rel="noopener">Git分支管理策略</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。公司目前的代码管理用的是git,自己简单总结了下git常用的命令。&lt;/p
      
    
    </summary>
    
      <category term="git" scheme="http://sunjianchao.top/categories/git/"/>
    
    
      <category term="git" scheme="http://sunjianchao.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>&lt;font size=&quot;5&quot;&gt;Android Studio 3.0遇到的坑&lt;/font&gt;</title>
    <link href="http://sunjianchao.top/2018/03/31/android/AndroidStudio3/"/>
    <id>http://sunjianchao.top/2018/03/31/android/AndroidStudio3/</id>
    <published>2018-03-31T12:32:53.000Z</published>
    <updated>2018-04-01T03:24:26.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="转自吴小龙同学-原文链接：-http-wuxiaolong-me-2017-11-04-AndroidStudio3"><a href="#转自吴小龙同学-原文链接：-http-wuxiaolong-me-2017-11-04-AndroidStudio3" class="headerlink" title="转自吴小龙同学 原文链接： http://wuxiaolong.me/2017/11/04/AndroidStudio3/"></a>转自吴小龙同学 原文链接： <a href="http://wuxiaolong.me/2017/11/04/AndroidStudio3/" target="_blank" rel="noopener">http://wuxiaolong.me/2017/11/04/AndroidStudio3/</a></h2><div id="posts" class="posts-expand"><p>  <article class="post post-type-normal" itemscope="" itemtype="http://schema.org/Article"><br>    <link itemprop="mainEntityOfPage" href="http://wuxiaolong.me/2017/11/04/AndroidStudio3/"></article></p><p></p><h1 id="Android-Studio-3-0"><a href="#Android-Studio-3-0" class="headerlink" title="Android Studio 3.0"></a>Android Studio 3.0</h1><p>官方更新日志：<a href="https://developer.android.google.cn/studio/releases/index.html" target="_blank" rel="noopener">https://developer.android.google.cn/studio/releases/index.html</a> ，我截图了，用的 Chrome 自带翻译功能，有些翻译不到位，但比我这半吊子英语看省事多了。<br><a id="more"></a><br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_8.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_8.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_9.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_9.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_10.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_10.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a></p><p></p><p></p><h1 id="增量升级"><a href="#增量升级" class="headerlink" title="增量升级"></a>增量升级</h1><p>点击 Check for Updates 增量更新：<br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_1.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_1.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br>下载完成，会提示更新 您将 Gradle 更新至 4.1：<br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_2.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_2.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br>这里建议您对老项目先暂时点击 Don’t remind me on this project，以防有坑。当然我不入地狱谁入地狱，我点 Update，于是问题来了，一直处于下载中，不过，莫担心，我下载好了，公众号聊天界面回复「<strong>gradle-4.1-all</strong>」，下载 gradle-4.1-all.zip 文件，放到：<br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_3.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_3.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br>重启 Android Studio。</p><p></p><p>gradle 目录：</p><br><p>Mac系统默认：/Users/(用户名)/.gradle</p><br><p>Windows系统默认：C:\Users(用户名).gradle</p><br><h1 id="修改旧项目"><a href="#修改旧项目" class="headerlink" title="修改旧项目"></a>修改旧项目</h1><p>首先我们新建项目，看看发生了哪些变化。</p><br><p>1、app／build.gradle<br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_4.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_4.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br>buildToolsVersion：这里没有构建工具的版本 buildToolsVersion 属性了，Android Studio 3.0 默认情况下，插件会自动为您使用的 Android 插件版本使用最低要求的构建工具版本；</p><br><p>implementation：由以前的 compile 改成了 implementation。老版本的构建关键字 compile 被废弃了，而是改成了这两个：api：同 compile 作用一样，即认为本 module 将会泄露其依赖的 module 的内容；<br>implementation：本 module 不会通过自身的接口向外部暴露其依赖 module 的内容。</p><br><p>2、项目 build.gradle<br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_5.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_5.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br>google()：Android Studio 3.0 现在默认使用 Google 的 Maven 存储库，而不是依赖于 Android SDK Manager 来获取 Android 支持库，Google Play 服务，Firebase 和其他依赖项的更新；</p><br><p>build.gradle：指定的是Gradle插件的版本，由之前的 2.3.3 改成了 3.0.0。</p><br><p>3、gradle-wrapper.properties<br>gradle-wrapper.properties 中配置的是的 Gradle 的版本。<br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_6.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_6.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br>可以对老项目就以上几点进行修改。</p><br><h1 id="butterknife"><a href="#butterknife" class="headerlink" title="butterknife"></a>butterknife</h1><p>如果您在 lib 里使用了 butterknife，会遇到以下错误：<br><a href="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_7.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" class="fancybox fancybox.image" rel="noopener" target="_blank"><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidStudio3.0_7.png?imageView2/0/format/png/q/75|watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5a6L5L2T/fontsize/1200/fill/IzIxOTZGMw==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim" alt=""></a><br>网上说将 apply plugin: ‘com.jakewharton.butterknife’ 注掉，是能解决问题，但是对于 lib 里使用了 butterknife 依旧报 R2 找不到，还得放开 apply plugin: ‘com.jakewharton.butterknife’，最后我只能退而求其次，将 build.gradle 中 3.0.0 改成之前的 2.3.3，解决。</p><br><h1 id="打包自定义-APK-文件名"><a href="#打包自定义-APK-文件名" class="headerlink" title="打包自定义 APK 文件名"></a>打包自定义 APK 文件名</h1><p>打包时，要是自定义输出 APK 文件名可以这样做：<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">android {</div><div class="line">    buildTypes {</div><div class="line">        release {</div><div class="line">            <span class="comment">//……</span></div><div class="line">            applicationVariants.all { variant -&gt;</div><div class="line">                <span class="keyword">if</span> (variant.buildType.name == <span class="string">‘release’</span>) {</div><div class="line">                    variant.outputs.each { output -&gt;</div><div class="line">                        def outputFile = output.<span class="function">outputFile</span></div><div class="line">                        <span class="title">if</span> <span class="params">(outputFile != <span class="keyword">null</span> &amp;&amp; outputFile.name.endsWith(<span class="string">‘.apk’</span>)</span>) {</div><div class="line">                            def fileName = <span class="string">“Sample_v${defaultConfig.versionName}<em>${releaseTime()}</em>${variant.flavorName}.apk”</span></div><div class="line">                            output.outputFile = <span class="keyword">new</span> File(outputFile.parent, fileName)</div><div class="line">                        }</div><div class="line">                    }</div><div class="line">                }</div><div class="line">            }</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function">def <span class="title">releaseTime</span><span class="params">()</span> </span>{</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Date().format(<span class="string">“yyyy-MM-dd”</span>, TimeZone.getTimeZone(<span class="string">“UTC”</span>))</div><div class="line">}</div></pre></td></tr></tbody></table></figure><p></p><br><p>使用 Gradle Plugin 3.0.0 时报错：<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Cannot set the value of read-only property <span class="string">‘outputFile’</span> <span class="keyword">for</span> ApkVariantOutputImpl_Decorated{apkData=Main{type=MAIN, fullName=release, filters=[]}} of type com.android.build.gradle.internal.api.ApkVariantOutputImpl. Open File</div></pre></td></tr></tbody></table></figure><p></p><br><p>需要修改 each() 和 outputFile() 方法为 all() 和 outputFileName，输出文件写法也有点不一样：<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">buildTypes {</div><div class="line">    release {</div><div class="line">        <span class="comment">//……</span></div><div class="line">        applicationVariants.all { variant -&gt;</div><div class="line">            <span class="keyword">if</span> (variant.buildType.name == <span class="string">‘release’</span>) {</div><div class="line">                variant.outputs.all {</div><div class="line">                    def apkName = <span class="string">“gradle4android_v${variant.versionName}”</span></div><div class="line">                    <span class="keyword">if</span> (!variant.flavorName.isEmpty()) {</div><div class="line">                        apkName += <span class="string">“<em>${variant.flavorName}”</em></span></div><div class="line">                    }</div><div class="line">                    outputFileName = apkName + <span class="string">“${releaseTime()}.apk”</span></div><div class="line">                }</div><div class="line">            }</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></tbody></table></figure><p></p><br><p>输出的路径也有点不一样，根目录是 release，如果有渠道 xiaomi，那根目录是 xiaomi／release。</p><br><h1 id="style-attribute-‘-android-attr-windowEnterAnimation’-not-found"><a href="#style-attribute-‘-android-attr-windowEnterAnimation’-not-found" class="headerlink" title="style attribute ‘@android:attr/windowEnterAnimation’ not found."></a>style attribute ‘@android:attr/windowEnterAnimation’ not found.</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Error:(<span class="number">22</span>, <span class="number">5</span>) style attribute <span class="string">‘@android:attr/windowEnterAnimation’</span> not found</div><div class="line">Error:(<span class="number">22</span>, <span class="number">5</span>) style attribute <span class="string">‘@android:attr/windowExitAnimation’</span> not found</div><div class="line">Error:(<span class="number">31</span>, <span class="number">5</span>) style attribute <span class="string">‘@android:attr/windowEnterAnimation’</span> not found</div><div class="line">Error:(<span class="number">31</span>, <span class="number">5</span>) style attribute <span class="string">‘@android:attr/windowExitAnimation’</span> not found</div></pre></td></tr></tbody></table></figure><br><p>这是aapt2导致的，3.0默认启用了aapt2。<br>解决办法：在project的根目录下的gradle.properties最后添加关闭aapt2的代码：<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android.enableAapt2=<span class="keyword">false</span></div></pre></td></tr></tbody></table></figure><p></p><br><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>build.gradle 和 gradle-wrapper.properties 区别，了解更多：<a href="https://developer.android.com/studio/releases/gradle-plugin.html" target="_blank" rel="noopener">https://developer.android.com/studio/releases/gradle-plugin.html</a></p><br><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>目前遇到这些坑，欢迎一起吐槽您在升级开发遇到的坑，这次升级又折腾了很久。另外如果需要gradle-4.1-all.zip 文件，公众号「吴小龙同学」聊天界面回复「<strong>gradle-4.1-all</strong>」获取。</p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;转自吴小龙同学-原文链接：-http-wuxiaolong-me-2017-11-04-AndroidStudio3&quot;&gt;&lt;a href=&quot;#转自吴小龙同学-原文链接
      
    
    </summary>
    
      <category term="git" scheme="http://sunjianchao.top/categories/git/"/>
    
    
      <category term="git" scheme="http://sunjianchao.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>分享多张图片到微信朋友圈</title>
    <link href="http://sunjianchao.top/2018/03/11/android/share/"/>
    <id>http://sunjianchao.top/2018/03/11/android/share/</id>
    <published>2018-03-11T07:52:53.000Z</published>
    <updated>2018-04-01T02:34:01.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="分享核心代码"><a href="#分享核心代码" class="headerlink" title="分享核心代码"></a>分享核心代码</h3><pre><code>/** *content: 朋友圈的文字内容 *uris: 图片的集合 */private void shareToWX(Activity activity,String content, ArrayList&lt;Uri&gt; uris){    try {        Intent intent = new Intent();        ComponentName comp = new ComponentName(&quot;com.tencent.mm&quot;, &quot;com.tencent.mm.ui.tools.ShareToTimeLineUI&quot;);        intent.setComponent(comp);        intent.setAction(Intent.ACTION_SEND_MULTIPLE);        intent.setType(&quot;image/*&quot;);        intent.putExtra(&quot;Kdescription&quot;, content);        intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);        activity.startActivityForResult(intent, 10);    } catch (ActivityNotFoundException e) {        activity.runOnUiThread(new Runnable() {            @Override            public void run() {                Toast.makeText(activity, &quot;您还未安装微信&quot;, Toast.LENGTH_SHORT).show();            }        });    }}</code></pre><h3 id="7-0获取Uri代码"><a href="#7-0获取Uri代码" class="headerlink" title="7.0获取Uri代码"></a>7.0获取Uri代码</h3><pre><code>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) {    return FileProvider.getUriForFile(context, &quot;{你的包名}.fileprovider&quot;, file);} else {    return Uri.fromFile(file);}//备注：file : File 类型的对象 [也可在7.0以后的版本中获取Uri]  try {    return Uri.parse(android.provider.MediaStore.Images.Media.insertImage(context.getContentResolver(), file.getAbsolutePath(), file.getName(), null));} catch (FileNotFoundException e) {    e.printStackTrace();}</code></pre><h3 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h3><pre><code>&lt;/application&gt;...&lt;providerandroid:name=&quot;android.support.v4.content.FileProvider&quot;android:authorities=&quot;{applicationId}.fileprovider&quot;android:exported=&quot;false&quot;android:grantUriPermissions=&quot;true&quot;&gt;&lt;meta-dataandroid:name=&quot;android.support.FILE_PROVIDER_PATHS&quot;android:resource=&quot;@xml/file_provider_paths&quot; /&gt;&lt;/provider&gt;&lt;/application&gt;</code></pre><h3 id="file-provider-paths-xml-res目录下创建xml文件夹"><a href="#file-provider-paths-xml-res目录下创建xml文件夹" class="headerlink" title="file_provider_paths.xml (res目录下创建xml文件夹)"></a>file_provider_paths.xml (res目录下创建xml文件夹)</h3><pre><code>&lt;files-path&gt; 共享app内部的存储(等价于 Context.getFilesDir() 返回的内容)&lt;files-path name=&quot;name&quot; path=&quot;path&quot; /&gt;&lt;cache-path&gt; 共享内部缓存目录(等价于 getCacheDir() 返回的内容)&lt;cache-path name=&quot;name&quot; path=&quot;path&quot; /&gt;&lt;external-path&gt; 共享外部的存储(等价于 Environment.getExternalStorageDirectory() 返回的内容)&lt;external-path name=&quot;name&quot; path=&quot;path&quot; /&gt;&lt;external-files-path&gt; 共享外部存储中与你的应用关联的目录(等于 Context.getExternalFilesDir(String) 或 Context.getExternalFilesDir(null) 返回的内容)&lt;external-files-path name=&quot;name&quot; path=&quot;path&quot; /&gt;&lt;external-cache-path&gt; 共享外部存储中与你的应用关联的缓存目录(等价于 Context.getExternalCacheDir() 返回的内容)&lt;external-cache-path name=&quot;name&quot; path=&quot;path&quot; /&gt;        ##关于属性        name=&quot;name&quot;引号里的内容可以随便填，建议填有意义的内容。path=&quot;path&quot;path属性的值表示共享的具体路径。注意：path属性里指定的是路径，而不是某个特定文件。这里不能指定为一个文件，也不能用通配符指定为一组文件</code></pre><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><pre><code>//临时授权intent.setFlags(FLAG_GRANT_READ_URI_PERMISSION 或 FLAG_GRANT_WRITE_URI_PERMISSION);</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;分享核心代码&quot;&gt;&lt;a href=&quot;#分享核心代码&quot; class=&quot;headerlink&quot; title=&quot;分享核心代码&quot;&gt;&lt;/a&gt;分享核心代码&lt;/h3&gt;&lt;pre&gt;&lt;c
      
    
    </summary>
    
      <category term="android" scheme="http://sunjianchao.top/categories/android/"/>
    
    
      <category term="share" scheme="http://sunjianchao.top/tags/share/"/>
    
  </entry>
  
</feed>
